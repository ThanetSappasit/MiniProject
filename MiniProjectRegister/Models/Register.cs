// <auto-generated />
//
// To parse this JSON data, add NuGet 'Newtonsoft.Json' then do:
//
//    using MauiApp1.Model;
//
//    var register = Register.FromJson(jsonString);

namespace MauiApp1.Model
{
    using System;
    using System.Collections.Generic;

    using System.Globalization;
    using Newtonsoft.Json;
    using Newtonsoft.Json.Converters;

    public partial class Register
    {
        [JsonProperty("user_id")]
        public string UserId { get; set; }

        [JsonProperty("name")]
        public string Name { get; set; }

        [JsonProperty("terms")]
        public List<Term> Terms { get; set; }
    }

    public partial class Term
    {
        [JsonProperty("term")]
        public string TermTerm { get; set; }

        [JsonProperty("courses")]
        public List<string> Courses { get; set; }
    }

    public partial class Register
    {
        public static List<Register> FromJson(string json) => JsonConvert.DeserializeObject<List<Register>>(json, MauiApp1.Model.Converter.Settings);
    }

    public static class RegisterSerialize
    {
        public static string ToJson(this List<Register> self) => JsonConvert.SerializeObject(self, MauiApp1.Model.Converter.Settings);
    }

    internal static class RegisterConverter
    {
        public static readonly JsonSerializerSettings Settings = new JsonSerializerSettings
        {
            MetadataPropertyHandling = MetadataPropertyHandling.Ignore,
            DateParseHandling = DateParseHandling.None,
            Converters =
            {
                new IsoDateTimeConverter { DateTimeStyles = DateTimeStyles.AssumeUniversal }
            },
        };
    }
}
